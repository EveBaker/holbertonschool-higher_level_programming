What does this script print?

l1 = [1, 2, 3]
l2 = l1
l1 = l1 + [4]
print(l2)

[1, 2, 3]

why does it print [1, 2, 3]
In the given code, l1 is assigned a list [1, 2, 3], and l2 is assigned the same list object as l1 using the assignment l2 = l1. Both l1 and l2 initially refer to the same list object in memory.
However, when l1 = l1 + [4] is executed, it creates a new list object by concatenating the elements of l1 and [4], and reassigns the variable l1 to refer to the new list object. 
The original list object [1, 2, 3] is unaffected.
Therefore, when print(l2) is executed, it still prints the contents of the original list object [1, 2, 3], as l2 still refers to that object. 
The reassignment of l1 does not affect l2 because it only changes which object l1 refers to, not l2.
